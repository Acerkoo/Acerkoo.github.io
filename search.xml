<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Jurisdiction Disenchantment(二维尺取)]]></title>
    <url>%2F2019%2F04%2F15%2FJurisdiction-Disenchantment-%E4%BA%8C%E7%BB%B4%E5%B0%BA%E5%8F%96%2F</url>
    <content type="text"><![CDATA[题目描述The Super League of Paragons and Champions (SLPC) has been monitoring a plot by a corrupt politician to steal an election. In the past week, the politican has used a mind-control technique to enslave the n representatives responsible for choosing the election’s winner. Luckily, the SLPC has managed to recruit you and hence has access to your power to break mind-control. You are able to break mind-control in an axis-aligned rectangle. Unfortunately, your power comes at a steep cost; you get a headache the next day proportional to the size of the rectangle. You do not even want to risk or think about what would happen if you tried to use your power multiple times in one day.You have done your research and you know the position that each representative will be standing when the votes are about to be cast. You need to free enough representatives to prevent the politician from having a majority (strictly more than one-half) vote. What is the area of the smallest axis-aligned rectangle that you can affect to do this? 输入The first line of input contains a single integer T (1 ≤ T ≤ 10), the number of test cases. The first line of each test case contains a single integer n (1 ≤ n ≤ 299, n is odd), the number of representatives. Each of the next n lines of input contains two integers, denoting the x and y coordinates of a representative. It is guaranteed that all coordinates are between −10,000 and +10,000. 输出For each test case, output a single line containing the area of the smallest axis-aligned rectangle containing more than n/2 of the representatives. 样例输入 211 130 01 43 2 样例输出 04 提示In the first case, a rectangle containing a single point has an area of 0.In the second test case, the rectangle needs to include at least two points. There are two smallest possible rectangles; one includes (0, 0) and (1, 4) and the other includes (1, 4) and (3, 2). In either case, the area is 4. 题意有 n 个点，需要用一个矩形框 n/2+1 个点，求矩形最小面积。 思路二维尺取，把 n 个点按 x 降序排序， 枚举 x 的边界，维护在这个边界中 n/2+1 个点的最小矩形面积。 代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#include &lt;bits/stdc++.h&gt;using namespace std;const int maxn = 300;const int inf = 0x7fffffff;int T, n;struct node &#123; int x, y; void read() &#123; scanf("%d%d", &amp;x, &amp;y); &#125; inline bool operator&lt;(const node &amp;p) &#123; return y &lt; p.y; &#125;&#125; a[maxn], b[maxn];bool cmp(node a, node b) &#123; return a.x &lt; b.x || a.x == b.x &amp;&amp; a.y &lt; b.y;&#125;int main() &#123; scanf("%d", &amp;T); while (T--) &#123; scanf("%d", &amp;n); for (int i = 1; i &lt;= n; ++i) &#123; a[i].read(); b[i] = a[i]; &#125; sort(a + 1, a + 1 + n, cmp); int ans = INT_MAX, m = n / 2 + 1; for (int i = 1; i &lt;= n; ++i) &#123; for (int j = i; j &lt;= n; ++j) &#123; int lx = a[i].x, rx = a[j].x; int cnt = 0; for (int k = 1; k &lt;= n; ++k) &#123; if (a[k].x &lt; lx || a[k].x &gt; rx) continue; b[++cnt] = a[k]; &#125; if (cnt &gt;= m) &#123; sort(b + 1, b + 1 + cnt); for (int k = 1; k &lt;= cnt - m + 1; ++k) &#123; int ly = b[k].y, ry = b[k + m - 1].y; ans = min(ans, (rx - lx) * (ry - ly)); &#125; &#125; &#125; &#125; printf("%d\n", ans); &#125; return 0;&#125;]]></content>
      <categories>
        <category>尺取</category>
      </categories>
      <tags>
        <tag>尺取</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F04%2F15%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
